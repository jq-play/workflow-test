name: On Push Make Docs

# This Github Action Workflow is specifically designed for
# the KASTLE-lab repository `modular-ontology-design-library`
# with `documentation-generator`
#
#
#
# Links:
#   - modl: https://kastle-lab/modular-ontology-design-library
#   - documentation-generator: https://kastle-lab/documentation-generator
#
# Actions Used:
#   - actions/checkout: https://www.github.com/actions/checkout/tree/v3/
#   - actions/setup-python: https://www.github.com/actions/setup-python/tree/v4/

on:
    push:
        branches:
            - master
        paths:
            - 'modl/**/*.*'

env:
    # This is where the location of the script will be located
    DEVOPS_REPO: jq-play/devops
    DEVOPS_DIR: devops

    # The output repo can be different, but if not changed,
    # it will default to this repo
    OUTPUT_REPO: ${{ github.repository }} # jq-play/workflow-test

    # The target is where the checked out repository
    # will be stored in the Actions VM. If the output repo
    # is not the current repo (modular-ontology-design-library)
    # change the value into 'output-repo'
    OUTPUT_TARGET: ${{ github.event.repository.name }} # workflow-test

    # This is the output directory that the script will output into
    # the script will get $OUTPUT_REPO/$OUTPUT_DIR it will most likely
    # stay to be 'documentation', but if ever need to be changed
    # change the value below
    OUTPUT_DIR: documentation

    # Preserve the original commit's actor to output a clean
    # commit message
    ACTOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
    ACTOR: ${{ github.actor }}

jobs:
    create-docs:
        name: Create Docs
        runs-on: ubuntu-latest
        permissions:
            actions: write
            checks: write
            contents: write

        steps:
            - name: Check-out devops repository
              uses: actions/checkout@v3
              with:
                  repository: ${{ env.DEVOPS_REPO }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  path: ${{ env.DEVOPS_DIR }}

            - name: Check-out this repo
              uses: actions/checkout@v3
              with:
                  path: ${{ github.event.repository.name }}
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Check-out output repo
              if: env.OUTPUT_REPO == github.repository
              uses: actions/checkout@v3
              with:
                  repository: ${{ env.OUTPUT_REPO }}
                  path: output-repo

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install Dependencies
              run: python -m pip install -r  ${{ env.DEVOPS_DIR }}/requirements.txt\

            - name: Reset commits
              run: |

            - name: Run Documentation Generator
              run: |
                  [[ ${{ env.OUTPUT_REPO == github.repository }} ]] \
                    && OUTPUT_TARGET=${{github.event.repository.name }} || \
                    OUTPUT_TARGET=output-repo

                  ONTOLOGY_DIR=${{ github.event.repository.name }}/modl

                  echo "Moving script to main"
                  cp ${{ env.DEVOPS_DIR }}/documentation-generator/documentation-generator.py \
                    $ONTOLOGY_DIR/documentation-generator.py \

                  python $ONTOLOGY_DIR/documentation-generator.py $ONTOLOGY_DIR $OUTPUT_TARGET/${{ env.OUTPUT_DIR }}

            - name: Commit Repo
              run: |
                  [[ ${{ env.OUTPUT_REPO == github.repository }} ]] \
                    && OUTPUT_TARGET=${{github.event.repository.name }} || \
                    OUTPUT_TARGET=output-repo
                    
                  cd $OUTPUT_TARGET

                  git config user.name "$ACTOR"
                  git config user.email "$ACTOR_EMAIL"

                  git add --all
                  git commit -m "Generated Documentation"
                  git push

                  git status

                  if [[ ${{ env.OUTPUT_REPO == github.repository }} ]] ; then \
                    git reset --soft ${{ github.sha }} ; \
                  fi

                  git commit --amend
                  git push

              # git commit -m "${{ github.event.head_commit.message }}" --author="$AUTHOR"
