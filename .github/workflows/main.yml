name: On Push Make Docs

on:
    push:
        branches:
            - master
        # paths:
        # - 'modl/**/*.*'

env:
    # This is where the location of the script will be located
    DEVOPS_REPO: jq-play/devops
    DEVOPS_DIR: devops

    # The output repo can be different, but if not changed,
    # it will default to this repo
    OUTPUT_REPO: ${{ github.repository }}
    OUTPUT_DIR: documentation

    ACTOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
    ACTOR: ${{ github.actor }}

jobs:
    create-docs:
        name: Create Docs
        runs-on: ubuntu-latest
        permissions:
            actions: write
            checks: write
            contents: write

        steps:
            - name: Check-out devops repository
              uses: actions/checkout@v3
              with:
                  repository: ${{ env.DEVOPS_REPO }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  path: ${{ env.DEVOPS_DIR }}

            - name: Check-out this repo
              uses: actions/checkout@v3
              with:
                  path: ${{ github.event.repository.name }}
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Check-out output repo
              uses: actions/checkout@v3
              if: env.OUTPUT_REPO == github.repository
              with:
                  repository: ${{ env.OUTPUT_REPO }}
                  path: output-repo

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install Dependencies
              run: python -m pip install -r  ${{ env.DEVOPS_DIR }}/requirements.txt\

            - name: Run Documentation Generator
              run: |
                  ONTOLOGY_DIR=$(find . -type d -name "modl")

                  [[ ${{ env.OUTPUT_REPO }} = ${{ github.repository }} ]] \
                    && OUTPUT_TARGET=${{github.event.repository.name}} || \
                    OUTPUT_TARGET=output-repo

                  echo "Moving script to main"
                  pwd
                  ls
                  cd $ONTOLOGY_DIR
                  ls
                  cp ${{ env.DEVOPS_DIR }}/documentation-generator/documentation-generator.py \
                    $ONTOLOGY_DIR/documentation-generator.py \

                  python documentation-generator $ONTOLOGY_DIR $OUTPUT_TARGET/${{ env.OUTPUT_DIR }} --worfkflow

            - name: Commit Repo
              run: |
                  cd $OUTPUT_TARGET

                  git config user.name "$ACTOR"
                  git config user.email "$ACTOR_EMAIL"

                  commit_msg=${{ github.event.head_commit.message }}

                  if [[ ${{env.OUTPUT_REPO == github.repository}} ]] ; then do \
                    git reset --soft $(git show --format="%h" -s); \
                  fi
                  git add **/*.md
                  git commit -m $commit_msg --author="$AUTHOR"
                  git push

              # github.event.head_commit.message
